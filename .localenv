export TERM=xterm-256color
export PATH=/home/dustinw/bin:$PATH
export LIBPATH=$LIBPATH:/home/dustinw/Lib
export GOPRIVATE=github.ibm.com/open-z/sys
export TMPDIR=/home/dustinw/tmp

### ZOSOpenTools

. /home/dustinw/zopen/etc/zopen-config

### GO SELECT

function go-select() {
    if [ $# -eq 0 ]; then
        echo "No install directory provided..."
        echo "Usage: go-select /path/to/goInstalls"
        return 1
    fi

    # Install directory is the first arg
    GO_DIR=$1

    # This is the actual go-select executable written in Go...
    # I've just renamed it to avoid conflict with the name of this function
    go-select_main $GO_DIR
    selected=$GO_DIR/selected
    if [[ -f $selected ]]; then
        # Sets GOROOT
        source $selected

        # Location for final Go 'executable'
        go_wrapper=/home/dustinw/bin/go

        # Create wrapper script
        echo "export _BPXK_AUTOCVT=ON" > $go_wrapper
        if [[ -f $GOROOT/go-build-zos/bin/goz-env ]]; then
            # Do goz-env -o manually because not all versions of goz-env have -o...
            echo "eval \$(${GOROOT}/go-build-zos/bin/goz-env) > /dev/null" >> $go_wrapper
            export PATH=$GOROOT/go-build-zos/bin:$PATH
        elif [[ -f $GOROOT/go-build-zos/envsetup ]]; then
            # Create wrapper manually for 1.18 or older...
            echo "source ${GOROOT}/go-build-zos/envsetup > /dev/null" >> $go_wrapper
            export PATH=$GOROOT/go-build-zos/bin:$PATH
        else
            echo "Couldnt find go-build-zos..."
        fi
        echo "exec \"${GOROOT}/bin/go\" \"\$@\"" >> $go_wrapper
        chmod +x $go_wrapper

        rm $selected
    else
        echo "No Go version selected"
    fi
}

# Don't call if in non-interactive shell (sftp)
if [[ $- == *i* ]]; then
    go-select /home/dustinw/GoVersions
fi

### BASH PROMPT

# Colours
white_fg="\001$(tput setaf 15)\002"
orange_fg="\001$(tput setaf 208)\002"
darkorange_fg="\001$(tput setaf 166)\002"
darkorange_bg="\001$(tput setab 166)\002"
lightgrey_fg="\001$(tput setaf 250)\002"
grey_fg="\001$(tput setaf 240)\002"
grey_bg="\001$(tput setab 240)\002"
darkgrey_fg="\001$(tput setaf 238)\002"
darkgrey_bg="\001$(tput setab 238)\002"
extradarkgrey_fg="\001$(tput setaf 236)\002"
extradarkgrey_bg="\001$(tput setab 236)\002"
reset="\001$(tput sgr0)\002"
arrow="\001\356\202\002\260"
lambda="\001\316\002\273"

unset PS1
PS1="$orange_fg$grey_bg \u $grey_fg$darkgrey_bg$arrow"                          # Username >
PS1+="$lightgrey_fg$darkgrey_bg \h $darkgrey_fg$darkorange_bg$arrow"            # Hostname >
PS1+="$white_fg$darkorange_bg \W $extradarkgrey_bg$darkorange_fg$arrow"         # pwd >
PS1+="$white_fg$extradarkgrey_bg $lambda $reset$extradarkgrey_fg$arrow $reset"  # Î» >
export PS1

# ALIASES

alias vim='vim -S ~/.vimrc'
alias paxing='pax -w -z -x pax -f'
alias unpaxing='pax -ppx -rf'
alias ls='ls -lsarT'

# Functions

function listobj() {
    echo " LISTOBJ" | amblist $1 | tr -cd "[:print:]\n\r\t"
}

function listload() {
    echo " LISTLOAD" | amblist $1 | tr -cd "[:print:]\n\r\t"
}

function tab2spaces() {
    sed -i.bak $'s/\t/    /g' $1
}

function updateEnv() {
        curl https://raw.githubusercontent.com/dustin-ward/Configs/master/.localenv -o /home/dustinw/.localenv
}
